package ch.bailu.aat_lib.resources;

/**
    This file was autogenerated by 'aat-lib/util/generate_strings.py'.
*/
public class Strings_fr extends Strings {
    @Override
    public String on() { return "On";}

    @Override
    public String off() { return "Off";}

    @Override
    public String auto() { return "Auto";}

    @Override
    public String none() { return "Aucun";}

    @Override
    public String enter() { return "Entrer…";}

    @Override
    public String pick() { return "Choisir (SAF)…";}

    @Override
    public String ok() { return "OK";}

    @Override
    public String cancel() { return "Annuler";}

    @Override
    public String gps() { return "GPS";}

    @Override
    public String gps_wait() { return "…";}

    @Override
    public String gps_nogps() { return "Non";}

    @Override
    public String gps_noaccess() { return "Refusé";}

    @Override
    public String tracker() { return "Tracker";}

    @Override
    public String tracker_start() { return "Démarrer";}

    @Override
    public String tracker_pause() { return "Pause";}

    @Override
    public String tracker_stop() { return "Stop";}

    @Override
    public String tracker_resume() { return "Reprendre";}

    @Override
    public String tracker_restore() { return "Restaurer la trace";}

    @Override
    public String status_paused() { return "En pause";}

    @Override
    public String status_autopaused() { return "Pause Auto";}

    @Override
    public String intro_about() { return "À Propos";}

    @Override
    public String intro_readme() { return "LISEZ-MOI";}

    @Override
    public String intro_documentation() { return "Documentation";}

    @Override
    public String intro_cockpit_a() { return "Vue A";}

    @Override
    public String intro_cockpit_b() { return "Vue B";}

    @Override
    public String intro_map() { return "Carte";}

    @Override
    public String intro_nominatim() { return "Rechercher sur la carte";}

    @Override
    public String intro_overlay_list() { return "Couches";}

    @Override
    public String intro_list() { return "Traces";}

    @Override
    public String intro_external_list() { return "Fichiers externes";}

    @Override
    public String intro_settings() { return "Préfèrences";}

    @Override
    public String label_summary() { return "Sommaire";}

    @Override
    public String label_filter() { return "Filtre";}

    @Override
    public String label_list() { return "Liste";}

    @Override
    public String filter_geo() { return "Limite intérieure";}

    @Override
    public String filter_date_start() { return "Date de départ";}

    @Override
    public String filter_date_to() { return "Date de fin";}

    @Override
    public String query_overpass() { return "Overpass";}

    @Override
    public String query_features() { return "Fonctions OSM";}

    @Override
    public String query_save_copy() { return "Enregistrer une copie";}

    @Override
    public String p_general() { return "Général";}

    @Override
    public String p_post_autopause() { return "Pause Post-Traitement";}

    @Override
    public String p_preset_slots() { return "Préréglages Visibles";}

    @Override
    public String p_unit_title() { return "Unités";}

    @Override
    public String p_location_provider() { return "Fournisseur de position";}

    @Override
    public String p_location_gps() { return "GPS Système";}

    @Override
    public String p_location_mock() { return "Position Simulée";}

    @Override
    public String p_directory_data() { return "Répertoire des données";}

    @Override
    public String p_cache_size() { return "Taille du cache";}

    @Override
    public String p_fix_gps() { return "Régler l\'horloge GPS";}

    @Override
    public String p_overlay() { return "Couches";}

    @Override
    public String p_legend_fulldistance() { return "Distance continue";}

    @Override
    public String p_preset() { return "Activité";}

    @Override
    public String p_met() { return "MET et nom";}

    @Override
    public String p_autopause() { return "Pause Automatique";}

    @Override
    public String p_tracker_autopause() { return "Mettre le Tracker en Pause Automatique";}

    @Override
    public String p_weight_title() { return "Votre poids en kg";}

    @Override
    public String p_backlight_title() { return "Rétro-éclairage";}

    @Override
    public String p_backlight_off() { return "Réglage Système";}

    @Override
    public String p_backlight_on() { return "Allumé";}

    @Override
    public String p_backlight_on_no_lock() { return "Allumé (Dévérouillage Automatique)";}

    @Override
    public String p_system() { return "Système";}

    @Override
    public String p_tile_size() { return "Taille de Tuile";}

    @Override
    public String p_accuracy_filter() { return "Précision Filtre";}

    @Override
    public String p_distance_filter() { return "Distance Filtre";}

    @Override
    public String p_missing_trigger() { return "Déclencheur manquant";}

    @Override
    public String p_map() { return "Carte";}

    @Override
    public String p_mapsforge_directory() { return "Répertoire des cartes hors-ligne";}

    @Override
    public String p_mapsforge_theme() { return "Thème des cartes hors-ligne";}

    @Override
    public String p_enable_cache() { return "Activer le cache";}

    @Override
    public String p_directory_tiles() { return "Répertoire du cache des tuiles";}

    @Override
    public String p_trim_cache() { return "Réduire le cache des tuiles";}

    @Override
    public String p_tiles() { return "Tuiles";}

    @Override
    public String p_trim_mode() { return "Mode réduction";}

    @Override
    public String p_trim_size() { return "Réduire Taille";}

    @Override
    public String p_trim_age() { return "Réduire âge";}

    @Override
    public String p_trim_month() { return "Mois";}

    @Override
    public String p_trim_months() { return "Mois";}

    @Override
    public String p_trim_year() { return "Année";}

    @Override
    public String p_trim_years() { return "Années";}

    @Override
    public String p_trim_days() { return "Jours";}

    @Override
    public String p_trim_total() { return "Total";}

    @Override
    public String p_remove_all() { return "Effacer le cache";}

    @Override
    public String p_remove_all_in() { return "Effacer le cache dans";}

    @Override
    public String p_remove_old() { return "Effacer anciennes tuiles";}

    @Override
    public String p_remove_old_in() { return "Effacer anciennes tuiles dans";}

    @Override
    public String file_reload() { return "Recharger la prévisualisation";}

    @Override
    public String file_delete() { return "Effacer le fichier";}

    @Override
    public String file_rename() { return "Renommer le fichier";}

    @Override
    public String file_overlay() { return "Utiliser comme couche";}

    @Override
    public String file_mock() { return "Utiliser comme position simulée";}

    @Override
    public String file_delete_ask() { return "Effacer le fichier ?";}

    @Override
    public String file_send() { return "Envoyer…";}

    @Override
    public String file_view() { return "Voir/Editer…";}

    @Override
    public String file_copy() { return "Copier vers…";}

    @Override
    public String file_exists() { return "\u0020existe déjà!";}

    @Override
    public String file_is_writeable() { return "\u0020est éditable.";}

    @Override
    public String file_is_writeonly() { return "\u0020est uniquement éditable.";}

    @Override
    public String file_is_readonly() { return "\u0020est en lecture seule.";}

    @Override
    public String file_is_missing() { return "\u0020n\'existe pas.";}

    @Override
    public String file_is_denied() { return "\u0020n\'est pas accessible.";}

    @Override
    public String location_title() { return "Centrer la position";}

    @Override
    public String location_view() { return "Voir la position…";}

    @Override
    public String location_send() { return "Envoyer la position…";}

    @Override
    public String clipboard_copy() { return "\u21d2 Bloc-notes";}

    @Override
    public String clipboard_paste() { return "\u21d0 Bloc-notes";}

    @Override
    public String dialog_yes() { return "Oui";}

    @Override
    public String dialog_no() { return "Non";}

    @Override
    public String dialog_cancel() { return "Annuler";}

    @Override
    public String dialog_discard() { return "Abandonner";}

    @Override
    public String dialog_save() { return "Sauvegarder";}

    @Override
    public String dialog_modified() { return "Le fichier a été modifié";}

    @Override
    public String d_longitude() { return "Longitude";}

    @Override
    public String d_latitude() { return "Latitude";}

    @Override
    public String d_name() { return "Nom";}

    @Override
    public String d_accuracy() { return "Précision";}

    @Override
    public String d_enddate() { return "Fin";}

    @Override
    public String d_startdate() { return "Démarrer";}

    @Override
    public String d_acceleration() { return "Accéleration";}

    @Override
    public String d_bearing() { return "Orientation";}

    @Override
    public String d_path() { return "Chemin";}

    @Override
    public String d_state() { return "Etat";}

    @Override
    public String d_size() { return "Taille";}

    @Override
    public String d_ascend() { return "Ascension";}

    @Override
    public String d_descend() { return "Descente";}

    @Override
    public String d_slope() { return "Pente";}

    @Override
    public String pause() { return "Pause";}

    @Override
    public String pause_ap() { return "Pause (avec autopause)";}

    @Override
    public String speed() { return "Vitesse";}

    @Override
    public String average() { return "Moyenne";}

    @Override
    public String average_ap() { return "Moyenne (sans pauses)";}

    @Override
    public String maximum() { return "Maximum";}

    @Override
    public String distance() { return "Distance";}

    @Override
    public String altitude() { return "Altitude";}

    @Override
    public String time() { return "Durée totale";}

    @Override
    public String time_ap() { return "Durée totale (sans pauses)";}

    @Override
    public String calories() { return "Calories";}

    @Override
    public String name() { return "Nom";}

    @Override
    public String tt_edit_add() { return "Ajouter un point et centrer la carte.";}

    @Override
    public String tt_edit_remove() { return "Enlever le point selectionné.";}

    @Override
    public String tt_edit_up() { return "Déplacer un point vers le haut dans la liste.";}

    @Override
    public String tt_edit_down() { return "Déplacer un point vers le bas dans la liste.";}

    @Override
    public String tt_edit_redo() { return "Refaire la dernière action annulée.";}

    @Override
    public String tt_edit_undo() { return "Défaire la dernière action.";}

    @Override
    public String tt_info_grid() { return "Changer de mode de grille.";}

    @Override
    public String tt_info_legend() { return "Changer de mode de légende des traces.";}

    @Override
    public String tt_info_nominatim() { return "Recherche avec OSM-Nominatim.";}

    @Override
    public String tt_info_reload() { return "Recharger les tuiles visibles.";}

    @Override
    public String tt_info_location() { return "Import/export d\'une position centrée.";}

    @Override
    public String tt_map_zoomin() { return "Zoom avant.";}

    @Override
    public String tt_map_zoomout() { return "Zoom arrière.";}

    @Override
    public String tt_map_home() { return "Verrouiller le centre de la carte à la dernière position connue.";}

    @Override
    public String tt_map_frame() { return "Changer de couches GPX et les décaler.";}

    @Override
    public String tt_nominatim_query() { return "Démarrer la recherche.";}

    @Override
    public String tt_nominatim_clear() { return "Effacer la ligne dans le texte de recherche.";}

    @Override
    public String tt_cockpit_a() { return "Plein écran";}

    @Override
    public String tt_cockpit_b() { return "Ecran partagé";}

    @Override
    public String tt_menu_file() { return "Afficher le menu d\'opérations fichiers.";}

    @Override
    public String tt_p_preset_slots() { return "Nombre de Répertoires et Préréglages que vous souhaitez utiliser pour organiser les tracés.";}

    @Override
    public String tt_p_distance_filter() { return "Distance minimale entre deux enregistrements GPS.";}

    @Override
    public String tt_p_accuracy_filter() { return "Précision GPS minimale pour enregistrement.";}

    @Override
    public String tt_p_missing_trigger() { return "Pause Automatique si le signal GPS est perdu pendant un certain laps de temps.";}

    @Override
    public String error_integer() { return "Seuls les nombres entiers sont acceptés.\n\"%s\"";}

    @Override
    public String error_integer_positive() { return "Le poids doit être compris entre 1 et 999.";}

    @Override
    public String error_long() { return "Seuls les nombres sont autorisés.\n\"%s\"";}

    @Override
    public String error_met() { return "Le premier nombre doit être entre 0.0 et 20.0, suivi d\'un espace.";}

    @Override
    public String[] p_unit_list() {
        return new String[] {
            "Métriques (km, km/h)",
            "Impériales (mi, mph)",
            "Nautiques (nm, kn)",
            "Unités du système International",
        };
    }

    @Override
    public String[] p_met_list() {
        return new String[] {
            " 6.8 Cyclisme : Route (20km/h)",
            " 8.5 Cyclisme : VTT Général",
            " 7.0 Jogging : Général",
            " 6.0 Randonnée : Cross country",
            " 2.0 Test",
            "14.0 Cyclisme : Côtes ou VTT",
            "16.0 Cyclisme : Course ou VTT",
            " 5.8 Cyclisme : Route (15km/h)",
            "10.0 Cyclisme, Route (26km/h)",
            " 6.0 Course à pied (6,4km/h)",
            " 9.0 Course à pied (8,4km/h)",
            " 9.8 Course à pied (9,7km/h)",
            " 9.0 Course à pied : Cross",
            "10.0 Course à pied : Sur bitume ou en groupe",
            " 8.0 Course à pied : Chaise roulante ou Poussette",
            "13.3 Course à pied : Marathon",
            " 7.8 Randonnée avec sac à dos",
            " 7.3 Randonnée avec charge de 0,5 à 1kg",
            " 8.3 Randonnée avec charge de 10 à 20kg",
            " 9.0 Randonnée avec charge supérieure à 20kg",
            " 5.3 Marche : Général",
            " 6.5 Marche Sportive",
            " 8.0 Escalade",
            " 2.0 Marche Lente (3km/h) ",
            " 3.5 Marche Loisir",
            " 3.0 Marche avec chien",
            " 4.8 Marche Nordique",
            " 6.8 Marche Nordique en Montée",
        };
    }

    @Override
    public String[] p_trim_modes() {
        return new String[] {
            "Taille",
            "Taille et âge",
            "Âge",
            "Taille ou âge",
        };
    }

}